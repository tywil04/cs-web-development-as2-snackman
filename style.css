@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

:root {
    --font-family: "Press Start 2P";

    --text-color: rgb(255, 255, 255);
    --text-color-subtle: rgb(179, 179, 179);
    --text-color-very-subtle: rgb(124, 124, 124);

    --button-hover-opacity: 70%;

    --bg-color: rgb(0, 0, 0);
    --secondary-bg-color: rgba(20, 20, 20, 1);
    --tertiary-bg-color: rgba(10, 10, 10, 1);
    
    --wall-color: rgb(0, 0, 255);
    --point-color: rgb(255, 255, 255);
    --unexpended-life-color: rgb(255, 0, 0);
    --expended-life-color: rgb(211, 211, 211);
    --snackman-mouth: polygon(100% -10%, 0% -10%, 0% 110%, 100% 110%, 100% 75%, 50% 50%, 100% 25%);
    --snackman-color: rgb(255, 204, 0);
    --snackman-hit-color: rgb(255, 0, 0);
    --grunt-color: rgb(0, 128, 0);
    --witch-color: purple;
    --robber-color: darkgrey;
    --crusher-color: red;

    --hover-duration: 100ms;
    --box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.1) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;
}

* {
    margin: 0;
    padding: 0;
    color: var(--text-color);
    font-family: var(--font-family);
}

body {
    background-color: var(--bg-color);
    height: 100vh;
    display: grid;
    grid-template-columns: 1fr 80vh 1fr;
    grid-template-rows: auto;
    grid-template-areas: 
        "header header header"
        "leaderboard maze lives"
        "leaderboard maze level"
        "leaderboard maze score"
        "leaderboard maze coins"
        "leaderboard maze controls"
    ;
    align-items: center;
    justify-items: center;
}

header {
    grid-area: header;
    text-align: center;

    & > h1 {
        font-size: 4em;
    }
}

dialog[open] {
    background-color: var(--secondary-bg-color);
    z-index: 100;
    border-radius: 20px;
    padding: 30px;
    display: flex;
    height: fit-content;
    cursor: default;
    box-shadow: var(--box-shadow);
    outline: none;
    flex-direction: row;
    border: none;
    width: fit-content;
    margin: auto;
    max-width: 50%;
}

dialog[open] .container {
    display: flex;
    flex-direction: column;
    margin-left: 35px;
    gap: 30px;
}

dialog[open] .container .divider {
    width: 100%;
    height: 10px;
    text-align: left;
    font-size: 0.7rem;
    color: var(--text-color-very-subtle);
}

dialog[open] .container .title {
    font-size: 1.5rem;
    text-decoration: underline 2px solid var(--text-color);
}

dialog[open] .container button {
    width: fit-content;
    height: fit-content;
    background: none;
    cursor: pointer;
    outline: none;
    cursor: pointer;
    color: var(--text-color);
    border: none;
    margin: 0px;
    margin-top: auto;
    margin-bottom: auto;
    transition-duration: var(--hover-duration);
}

dialog[open] .container button:hover {
    opacity: var(--button-hover-opacity);
}

dialog[open] .container button .label {
    text-align: left;
    pointer-events: none;
}

dialog[open] .container #upgrade-items button .label {
    font-size: 1.2em;
}

dialog[open] .container button .description {
    text-align: left;
    line-height: 1.1rem;
    font-size: 0.75rem;
    color: var(--text-color-subtle);
    pointer-events: none;
}

dialog[open] .container #upgrade-items {
    display: flex;
    flex-direction: column;
    gap: 30px;
}

#maze {
    --maze-size: 10;

    grid-area: maze;
    display: grid;
    grid-template-columns: repeat(var(--maze-size), calc(100% / var(--maze-size)));
    grid-template-rows: min-content max-content max-content max-content;
    width: 80vh;
    height: 80vh;
    align-items: center;
    justify-items: center;

    .block  {
        width: 100%;
        height: 100%;
        position: relative;
        aspect-ratio: 1/1;
    
        &.player {
            --rotation: 0deg;
            --starting-row: 0;
            --starting-column: 0;
            --row: 0;
            --column: 0;
            --move-speed: 0ms;
            
            z-index: 2;
            top: 0;
            left: 0;
            transition-property: top, left;
            transition-duration: var(--move-speed);
            border-radius: 1000px;
            background: var(--snackman-color);
            transform: rotate(var(--rotation));
            clip-path: var(--snackman-mouth);

            /* idk why but this makes snackman fit better */
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(100% * calc(var(--row) - var(--starting-row)));
            left: calc(100% * calc(var(--column) - var(--starting-column)));

            &[data-animated=true] {
                animation: mouth-animation;
                animation-duration: 800ms;
                animation-timing-function: linear;
                animation-iteration-count: infinite;
            }
    
            &[data-dead=true] {
                animation: death-animation 1.5s ease-in-out forwards !important;
            }
            
            &[data-hit=true] {
                animation: hit-animation 1.5s ease-in-out !important;
            }
        }
    
        &.point {
            border-radius: 100%;
            background-color: var(--point-color);
            height: 10%;
            width: 10%;
            z-index: 0;
            opacity: 100%;
            transition-duration: 300ms;
    
            &[data-collected=true] {
                opacity: 0%;
            }
        }
        
        &.coin {
            height: 80%;
            width: 80%;
            z-index: 0;
            opacity: 100%;
            transition-duration: 300ms;
            background-image: url(images/coin.png);
            background-size: contain;

            &[data-collected=true] {
                opacity: 0%;
            }
        }

        &.bomb {
            height: 100%;
            width: 100%;
            z-index: 0;
            opacity: 100%;
            transition-duration: 300ms;
            background-image: url(images/bomb.png);
            background-size: contain;

            &[data-detonated=true] {
                opacity: 0%;
            }
        }

        &.jelly {
            height: 100%;
            width: 100%;
            z-index: 0;
            opacity: 100%;
            transition-duration: 300ms;
            background-image: url(images/jelly.png);
            background-size: contain;

            &[data-eaten=true] {
                opacity: 0%;
            }
        }

        &.grunt {
            --starting-row: 0;
            --starting-column: 0;
            --row: 0;
            --column: 0;
            --move-speed: 0ms;

            z-index: 1;
            border-radius: 1000px;
            background: var(--grunt-color);
            transition-property: top, left;
            transition-duration: var(--move-speed);

            /* idk why but this makes snackman fit better */
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(100% * calc(var(--row) - var(--starting-row)));
            left: calc(100% * calc(var(--column) - var(--starting-column)));

            &[data-hit=true] {
                animation: grunt-hit-animation 1.5s ease-in-out !important;
            }
        }

        &.witch {
            --starting-row: 0;
            --starting-column: 0;
            --row: 0;
            --column: 0;
            --move-speed: 0ms;

            z-index: 1;
            border-radius: 1000px;
            background: var(--witch-color);
            transition-property: top, left;
            transition-duration: var(--move-speed);

            /* idk why but this makes snackman fit better */
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(100% * calc(var(--row) - var(--starting-row)));
            left: calc(100% * calc(var(--column) - var(--starting-column)));

            &[data-hit=true] {
                animation: witch-hit-animation 1.5s ease-in-out !important;
            }
        }

        &.robber {
            --starting-row: 0;
            --starting-column: 0;
            --row: 0;
            --column: 0;
            --move-speed: 0ms;

            z-index: 1;
            border-radius: 1000px;
            background: var(--robber-color);
            transition-property: top, left;
            transition-duration: var(--move-speed);

            /* idk why but this makes snackman fit better */
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(100% * calc(var(--row) - var(--starting-row)));
            left: calc(100% * calc(var(--column) - var(--starting-column)));

            &[data-hit=true] {
                animation: robber-hit-animation 1.5s ease-in-out !important;
            }
        }

        &.crusher {
            --starting-row: 0;
            --starting-column: 0;
            --row: 0;
            --column: 0;
            --move-speed: 0ms;

            z-index: 1;
            border-radius: 1000px;
            background: var(--crusher-color);
            transition-property: top, left;
            transition-duration: var(--move-speed);

            /* idk why but this makes snackman fit better */
            width: calc(100% - 2px);
            height: calc(100% - 2px);
            top: calc(100% * calc(var(--row) - var(--starting-row)));
            left: calc(100% * calc(var(--column) - var(--starting-column)));

            &[data-hit=true] {
                animation: crusher-hit-animation 1.5s ease-in-out !important;
            }
        }
    
        &.wall {
            background-color: var(--wall-color);
            z-index: 3;
        }
    }
}

/* Lives styling */
.lives {
    height: fit-content;
    align-items: center;
    margin: 0.5em;
    margin-bottom: auto;
    grid-area: lives;

    & > ul {
        display: flex;
        flex-direction: row;
        margin: 0.25rem;

        & > li {
            list-style: none;
            background-color: var(--unexpended-life-color);
            width: 2rem;
            height: 2rem;
            border-radius: 100%;
            margin: 5px;
        
            &[data-used=true] {
                background-color: var(--expended-life-color);
            }
        }
    }
}

.score {
    grid-area: score;
    height: fit-content;
    margin-bottom: auto;
}

.level {
    grid-area: level;
    height: fit-content;
    margin-bottom: auto;
}

.coins {
    grid-area: coins;
    height: fit-content;
    margin-bottom: auto;
}

.display-title {
    font-size: 1.25em;
    text-decoration: underline;
    text-align: center;
}

.display-text {
    margin: 0.5em;
    font-size: 2em;
    text-align: center;
}

.leaderboard {
    grid-area: leaderboard;
    height: fit-content;
    margin-bottom: auto;

    & > ol {
        margin-top: 1em;
        text-align: left;

        & > li {
            font-size: 0.85em;
            padding: 1em 0;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }
    }
}

.controls {
    grid-area: controls;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-template-areas: 
        ". upArrow ."
        "leftArrow middle rightArrow"
        ". downArrow ."
    ;
    width: 25vh;
    height: 25vh;
    border-radius: 12px;

    & > button {
        background-color: var(--secondary-bg-color);
        border-radius: 12px;
        cursor: pointer;
        outline: none;
        transition-duration: var(--hover-duration);
        border: none;
        box-shadow: var(--box-shadow);

        &:hover {
            color: var(--text-color-very-subtle);
        }

        &[data-active=true] {
            background-color: var(--tertiary-bg-color);
        }

        &:nth-child(1) { 
            grid-area: upArrow;
            border-bottom-left-radius: 0px;
            border-bottom-right-radius: 0px;
            margin-bottom: -1px;
        }
    
        &:nth-child(2) {
            grid-area: downArrow;
            border-top-left-radius: 0px;
            border-top-right-radius: 0px;
            margin-top: -1px;
        }
    
        &:nth-child(3) {
            grid-area: leftArrow; 
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
            margin-right: -1px;
        }
    
        &:nth-child(4) {
            grid-area: rightArrow;
            border-top-left-radius: 0px;
            border-bottom-left-radius: 0px;
            margin-left: -1px;
        }
    }

    & > .middle {
        grid-area: middle;
        background-color: var(--secondary-bg-color);
    }
}

img.logo {
    margin-bottom: auto;
    height: 48px;
    width: 48px;
    padding: 0; 
}

@keyframes death-animation {
    0% {
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        transform: rotate(var(--rotation)) scale(0.5);
    }
    100% {
        transform: rotate(var(--rotation)) scale(0);
    }
}

@keyframes hit-animation {
    0%, 100% {
        background: var(--snackman-color);
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        background: var(--snackman-hit-color);
        transform: rotate(var(--rotation)) scale(0.75);
    }
}

@keyframes grunt-hit-animation {
    0%, 100% {
        background: var(--grunt-color);
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        background: var(--snackman-hit-color);
        transform: rotate(var(--rotation)) scale(0.75);
    }
}


@keyframes witch-hit-animation {
    0%, 100% {
        background: var(--witch-color);
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        background: var(--snackman-hit-color);
        transform: rotate(var(--rotation)) scale(0.75);
    }
}

@keyframes robber-hit-animation {
    0%, 100% {
        background: var(--robber-color);
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        background: var(--snackman-hit-color);
        transform: rotate(var(--rotation)) scale(0.75);
    }
}

@keyframes crusher-hit-animation {
    0%, 100% {
        background: var(--crusher-color);
        transform: rotate(var(--rotation)) scale(1);
    }
    50% {
        background: var(--snackman-hit-color);
        transform: rotate(var(--rotation)) scale(0.75);
    }
}

@keyframes mouth-animation {
    0% {
        clip-path: var(--snackman-mouth);
    }
    100% {
        clip-path: none;
    }
}